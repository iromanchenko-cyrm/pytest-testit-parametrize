# For more information about tox, see https://tox.readthedocs.io/en/latest/
[tox]
requires =
     tox>=4
envlist =
    isort-check
    isort-check-tests
    black-check
    flake8-check
    pylint-check
    py39,py310,py311,py312
basepython = python3.10

[testenv]
description = run tests
deps =
    pytest>=8.3.3
    testit-python-commons>=3.2.6
commands = pytest {posargs:tests}

[isort]
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
;line_length=132

[testenv:isort]
skip_install = true
changedir = {toxinidir}/src
deps = isort>=5.13.2
commands = isort -sp={toxinidir}/tox.ini .

[testenv:isort-check]
skip_install = true
changedir = {toxinidir}/src
deps = isort>=5.13.2
commands = isort --check-only -sp={toxinidir}/tox.ini .

[testenv:isort-tests]
skip_install = true
changedir = {toxinidir}/tests
deps = isort>=5.13.2
commands = isort -sp={toxinidir}/tox.ini .


[testenv:isort-check-tests]
skip_install = true
changedir = {toxinidir}/tests
deps = isort>=5.13.2
commands = isort --check-only -sp={toxinidir}/tox.ini .

[tool.black]
line-length = 140

[testenv:black]
skip_install = true
deps = black>=24.10.0
commands = black src tests

[testenv:black-check]
skip_install = true
deps = black>=24.10.0
commands = black --check src tests

[flake8]
max-line-length=120
ignore=E203,E231

[testenv:flake8-check]
skip_install = true
deps = flake8>=7.1.1
commands = flake8 --config=tox.ini src tests

[pylint]
max-line-length=140
output-format=colorized
notes=
    FIXME,
    TODO
disable=
    invalid-name,
    missing-module-docstring,
    missing-function-docstring,
    missing-class-docstring,
    too-few-public-methods,
    unused-private-member,
    import-outside-toplevel

[testenv:pylint-check]
deps =
    {[testenv]deps}  # pylint проверят зависимости, поэтому следует их устанавливать
    pylint==3.3.2
commands = pylint --rcfile=tox.ini src tests {posargs}

[testenv:type]
description = run type checks
deps =
    mypy
commands =
    mypy {posargs:src tests}

[testenv:build_wheel]
skip_install = True
deps =
    wheel
    docutils
    pygments
commands =
    python -c 'import shutil; (shutil.rmtree(p, ignore_errors=True) for p in ["build", "dist"]);'
    python setup.py sdist bdist_wheel

[testenv:test_upload]
skip_install = True
deps = twine
commands =
     python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

[testenv:test_venv]
skip_install = True
deps = ; пустые зависимости
commands =
    pip install -i https://test.pypi.org/simple/ pytest-testit-parametrize

[testenv:pypi_upload]
skip_install = True
deps =
    twine
commands =
    python -m twine upload dist/*

[testenv:pypi_venv]
skip_install = True
deps = ; не ставим зависимости
commands =
    pip install pytest-testit-parametrize